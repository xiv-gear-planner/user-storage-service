name: Build and Publish Container Image

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/xivgear-userdata-service

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      #
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Chmod
        run: chmod +x gradlew

      #      - name: Inject commit info
      #        run: |
      #          git rev-parse HEAD > ./version_info.txt
      #          git log -1 --pretty=%B >> ./version_info.txt

      # Docker stuff begins here
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3


        # We need to run the nosql DB for integration testing:
      - name: Start NoSQL for testing
        run: docker run -d --name=kvlite --hostname=kvlite --env KV_PROXY_PORT=8080 -p 9050:8080 --rm --name nosql ghcr.io/oracle/nosql:latest-ce

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Test and publish package
        # Sonatype central does not support snapshots
        run: ./gradlew build dockerfile

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: build/docker/main/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Stop and remove Docker container
        if: always()
        run: |
          docker stop nosql
